nameOverride: "cmsscan-scannew"
fullnameOverride: "cmsscan-scannew-service"

replicaCount: 2

image:
  repository: asia-southeast2-docker.pkg.dev/img-frontend-service
  environment: dev
  service: "{{ .Release.Name }}"
  pullPolicy: IfNotPresent
  tag: "1.0.0.0-20241128-1"

imagePullSecrets:
  - name: regcred

service:
  annotations: {}
  type: ClusterIP
  port: 1407
  targetPort: 1407

ingress:
  enabled: false
  className: "nginx"
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: example.adira.co.id
      paths:
        - path: /
          pathType: ImplementationSpecific

  tls: []

resources:
  limits:
    cpu: 1
    memory: 512Mi
  requests:
    cpu: 500m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 2

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext:
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000

route:
  enabled: false
  className: ""
  annotations: {}
  host: chart-example.local
  path: /
  wildcardPolicy: None

nodeSelector: {}

probes: {}

volumes: []

configMap:
  API_URL: http://10.17.44.199
  API_Port_Auth: 8008
  API_Port_Master: 8009
  API_Port_ScanNew: 8005
  API_Port_Versioning: 8006
  Agent_Port: 8081

secret:
  SECRET_KEY: 1w9bYddsq7w1DsojQW2Gkpfm67K5vQ==

env: {}

envFrom:
  - secretRef:
      name: cmsscan-frontend-secret
  - configMapRef:
      name: cmsscan-frontend-config

hostAliases: []

configFile: []

cronJob:
  enabled: false
  schedule: "* * * * *"
  concurrencyPolicy: Allow
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  restartPolicy: Never

tolerations: []

affinity:
