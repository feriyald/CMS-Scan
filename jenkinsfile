pipeline {
    agent any
    environment {
            NODE_VERSION = '20' // Ganti sesuai versi Node.js
            DOCKER_IMAGE = 'my-vue-app' // Nama Docker image
            DOCKER_CONTAINER = 'my-vue-app-container' // Nama container
            DOCKER_PORT = '910:81' // Port mapping untuk container
        }
        stages {
            stage('Check SSH') {
                steps {
                    script {
                        withCredentials([usernamePassword(credentialsId: 'ssh-password-jenkins-server', usernameVariable: 'SSH_USER', passwordVariable: 'SSH_PASS'),
                                         string(credentialsId: 'server-ip-jenkins', variable: 'TARGET_IP')]) {
                        sh """
                        sshpass -p '${SSH_PASS}' ssh -o StrictHostKeyChecking=no ${SSH_USER}@${TARGET_IP} '''
                        docker ps -a'
                        """
                        }
                    }
                }
            }



stage('Build Docker Image') {
    steps {
        script {
                sh '''
                docker build -t ${DOCKER_IMAGE} -f dockerfile .
                '''
            }
        }
    }


        
                stage('Deploy with Docker') {
                    steps {
withCredentials([usernamePassword(credentialsId: 'ssh-password-jenkins-server', usernameVariable: 'SSH_USER', passwordVariable: 'SSH_PASS'),
                                         string(credentialsId: 'server-ip-jenkins', variable: 'TARGET_IP')]) {
                        sh """
                             docker ps -q --filter "name=${DOCKER_CONTAINER}" | grep -q . && docker stop ${DOCKER_CONTAINER} || true
                        docker ps -aq --filter "name=${DOCKER_CONTAINER}" | grep -q . && docker rm ${DOCKER_CONTAINER} || true

                        docker run -d --name ${DOCKER_CONTAINER} -p ${DOCKER_PORT} ${DOCKER_IMAGE}
                        """
                        }

                    }
                }
            }
        
}
